import telebot
import time
import random
import psycopg2
from bd import host, user, password, db_name
import requests
import markovify
import Diplom

bot = telebot.TeleBot("6375113300:AAG9lAZMl9wmjgAbYBC1PgV36ni-L-S7nCY")
bot.send_message(-4023848883, "–Ø —Ä–æ–¥–∏–ª—Å—è üê£")

try:
    connection = psycopg2.connect(
        host=host,
        user=user,
        password=password,
        database=db_name
    )
    connection.autocommit = True
    # bot.send_message(-4023848883, "–Ø –≤ –±–¥")
    # bot.send_message(-4023848883, "#" * 20)

except Exception as ex:
    bot.send_message(-4023848883, "–û—à–∏–±–∫–∞ –≤ —Ä–∞–±–æ—Ç–µ –ë–î")
    if connection:
        connection.close()
        bot.send_message(-4023848883, "#" * 20)
        bot.send_message(-4023848883, "–ó–∞–∫—Ä—ã–ª —Å–æ–µ–¥–µ–Ω–µ–Ω–∏–µ —Å –ë–î")
cursor = connection.cursor()


@bot.message_handler(commands=["searchforafag"]) #–ü–æ–∏—Å–∫ –ø–∏–¥–æ—Ä–∞
def searchforafag(message):
    chat_id = message.chat.id
    cursor.execute(f"SELECT data_fag from data_fag where id_chat = {chat_id}")
    new_fag = cursor.fetchone()
    if new_fag is None:
        cursor.execute(
            f'insert into data_fag (id_user, id_chat, data_fag) values (1, {chat_id},{0})')

    fag_texts = ['<b>–ü–∏–¥—Ä</b> —Å–µ–≥–æ–¥–Ω—è', '–ö–∞—Ä—Ç—ã —Å–∫–∞–∑–∞–ª–∏ —á—Ç–æ <b>–ü–ò–î–†</b> <b>–î–ù–Ø</b>', '–í—ã–±–æ—Ä —Å–¥–µ–ª–∞–Ω <b>–ü–∏–¥—Ä</b> –¥–Ω—è']
    cursor.execute(f"SELECT max(data_fag) from data_fag where id_chat = {chat_id}")
    time_hat_id = cursor.fetchone()
    time_fag_chat = int(time.time()) - time_hat_id[0]
    if time_fag_chat < 86400:  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–∫—É–Ω–¥ –≤ –¥–µ–Ω—å
        bot.send_message(message.chat.id, f"–ù–∞ —Å–µ–≥–æ–¥–Ω—è –ø–∏–¥–æ—Ä–æ–≤ —Ö–≤–∞—Ç–∏—Ç")
    else:
        cursor.execute(f"SELECT id_user, name_user from user_tg")
        users_all = cursor.fetchall()
        user_fag = random.choice(users_all)
        fag_text = random.choice(fag_texts)
        cursor.execute(f'UPDATE user_tg SET amount_fag = amount_fag+1 where id_user = {user_fag[0]};')
        cursor.execute(
            f'insert into data_fag (id_user, id_chat, data_fag) values ({user_fag[0]}, {message.chat.id},{time.time()})')
        bot.send_chat_action(chat_id=message.chat.id, action="typing", timeout=3)  # –ò–º–∏—Ç–∞—Ü–∏—è –Ω–∞–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞
        time.sleep(random.randint(1, 3))
        for _ in range(3):
            cursor.execute("SELECT text_music FROM text_music ORDER BY RANDOM() LIMIT 1")
            for text_music in cursor.fetchone():
                bot.send_message(message.chat.id, f"{text_music}")
                bot.send_chat_action(chat_id=message.chat.id, action="typing", timeout=3)  # –ò–º–∏—Ç–∞—Ü–∏—è –Ω–∞–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞
                time.sleep(random.randint(1, 3))


        bot.send_message(message.chat.id, f"{fag_text} @{user_fag[1]}", parse_mode='HTML')



@bot.message_handler(commands=["info"]) #–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
def info(message):
    bot.send_chat_action(chat_id=message.chat.id, action="typing", timeout=3)  # –ò–º–∏—Ç–∞—Ü–∏—è –Ω–∞–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞
    time.sleep(random.randint(1, 3))
    bot.send_message(message.chat.id, """
    1. –î–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã —É—á–∞–≤—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∏–≥—Ä–µ —É—á–∞—Å—Ç–Ω–∏–∫ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–º –≤ —á–∞—Ç–µ \n 2. –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã –±—ã—Ç—å –ø–∏–¥–æ—Ä–æ–º –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –±—ã—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–º –ø–∏–¥–æ—Ä–æ–º \n 3. –ò –∑–∞–ø–æ–º–Ω–∏—Ç–µ –Ω–∏ —Å–ª–æ–≤–∞ –æ –ø–∏–¥–æ—Ä–µ
    """)

@bot.message_handler(commands=["diplom"]) #–î–∏–ø–ª–æ–º –ø–∏–¥–æ—Ä–∞
def info(message):
    bot.send_chat_action(chat_id=message.chat.id, action="typing", timeout=3)  # –ò–º–∏—Ç–∞—Ü–∏—è –Ω–∞–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞
    time.sleep(random.randint(1, 3))
    bot.send_message(message.chat.id, "–°–µ–π—á–∞—Å –æ—Ñ–æ—Ä–º–ª—é –≤—Å–µ –±—É–º–∞–≥–∏, –æ–¥–Ω—É —Å–µ–∫—É–Ω–¥—É")
    cursor.execute(f'SELECT amount_fag FROM user_tg where id_user ={message.from_user.id} and chat_id = {message.chat.id}')
    amount_fag = cursor.fetchone()
    Diplom.pidor_1(f'{message.from_user.username}', amount_fag[0])
    img = open('image_tst.png', 'rb')
    bot.send_photo(message.chat.id, img)

@bot.message_handler(commands=["applicants"]) #–ö–æ–ª–ª-–≤–æ –ø–∏–¥–æ—Ä–æ–≤
def search_for_a_fag(message):
    chat_id = message.chat.id
    bot.send_chat_action(chat_id=message.chat.id, action="typing", timeout=3)  # –ò–º–∏—Ç–∞—Ü–∏—è –Ω–∞–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞
    time.sleep(random.randint(1, 3))
    cursor.execute(
        f"SELECT name_user, amount_fag FROM user_tg WHERE chat_id = {chat_id} ORDER BY amount_fag DESC LIMIT 10")  # —Å–¥–µ–ª–∞—Ç—å –∫–æ–¥ —Å –≤—ã–≤–æ–¥–æ–º 10 —à—Ç—É–∫
    users_all = cursor.fetchall()
    info = ''
    rang = 1
    for el in users_all:
        info += f" <b>{rang}</b>  <b>{el[0]}</b> - {el[1]}\n"
        rang = rang + 1
        if rang == 11:
            break
    bot.send_message(message.chat.id, f"–¢–æ–ø 10 –ø–∏–¥–æ—Ä–æ–≤ \n \n{info} –ë–æ—Ä–∏—Ç–µ—Å—å!", parse_mode='HTML')
@bot.message_handler(commands=["tellmewisdom"]) #—Å–∫–∞–∂–∏ —á—Ç–æ-—Ç–æ –º—É–¥—Ä–æ–µ
def tell_me_wisdom(message):
    resp = requests.get("https://api.forismatic.com/api/1.0/?method=getQuote&format=json")
    text = resp.json()
    bot.send_chat_action(chat_id=message.chat.id, action="typing", timeout=3)  # –ò–º–∏—Ç–∞—Ü–∏—è –Ω–∞–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞
    time.sleep(random.randint(1, 3))
    bot.send_message(message.chat.id, f"{text['quoteText']}")

"""
–í  –±–ª–æ–∫–µ –Ω–∏–∂–µ –±—É–¥—É —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å –æ–±—â–µ–Ω–∏—è –∏ –æ—Ç–≤—Ç—ã –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å–ª–æ–≤–∞ –≤ —á–∞—Ç–µ
"""


@bot.message_handler(content_types="text")
def lalal(message):
    id_user = message.from_user.id
    name_user = message.from_user.username
    id_chat = message.chat.id
    cursor.execute(
        f"insert into text_message (text_user) values ('{message.text}') ") # –î–ª—è —Å–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞ –æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π,–¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –æ–±—É—á–µ–Ω–∏—è –±–æ—Ç–∞ –¥–∏–∞–ª–æ–≥–∞–º.
    cursor.execute(f"SELECT id_user FROM user_tg where chat_id = {id_chat} and id_user={id_user}")

    if not cursor.fetchall():
        cursor.execute(
            f"insert into user_tg (id_user, name_user, amount_fag, chat_id) values ('{id_user}','{name_user}',0,{id_chat}) ")
        bot.send_message(message.chat.id, f"–î–æ–±–∞–≤–∏–ª {name_user} –≤ –ø–∏–¥–æ—Ä—ã")

    if message.reply_to_message is not None:  # –ï—Å–ª–∏ –±–æ—Ç–∞ —Ü–∏—Ç–∏—Ä—É—é—Ç
        bot.send_chat_action(chat_id=message.chat.id, action="typing", timeout=3)  # –ò–º–∏—Ç–∞—Ü–∏—è –Ω–∞–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞
        time.sleep(random.randint(1, 3))  # –¢–∞–π–º–∞—É—Ç —á—Ç–æ –±—ã –ø—Ä–æ—à–ª–∞ –∞–Ω–∏–º–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞
        bot.send_message(message.chat.id,
                         f"{message.from_user.username}, –º–µ–Ω—è —Ü–∏—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Ä–µ–º—è —Ç–µ—Ä—è—Ç—å")  # –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    if "@bigeyedbotbot" in message.text:  # –ï—Å–ª–∏ —É–ø–æ–º–∏–Ω—É–ª–∏ –±–æ—Ç–∞
        bot.send_chat_action(chat_id=message.chat.id, action="typing", timeout=3)  # –ò–º–∏—Ç–∞—Ü–∏—è –Ω–∞–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞
        time.sleep(random.randint(1, 3))  # –¢–∞–π–º–∞—É—Ç —á—Ç–æ –±—ã –ø—Ä–æ—à–ª–∞ –∞–Ω–∏–º–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞
        bot.send_message(message.chat.id, "–ó–∞—á–µ–º —Ç—ã –º–µ–Ω—è —Ç—ã–∫–∞–µ—à—å? –£ —Ç–µ–±—è –∂–µ –µ—Å—Ç—å –∫–æ–º–∞–Ω–¥—ã, –≤–æ—Ç –∏ –æ–±—â–∞–π—Å—è –∏–º–∏.")
    if "–±–æ—Ç" in message.text.lower():  # –ï—Å–ª–∏ —É–ø–æ–º–∏–Ω—É–ª–∏ –±–æ—Ç–∞
        bot.send_chat_action(chat_id=message.chat.id, action="typing", timeout=3)  # –ò–º–∏—Ç–∞—Ü–∏—è –Ω–∞–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞
        time.sleep(random.randint(1, 3))  # –¢–∞–π–º–∞—É—Ç —á—Ç–æ –±—ã –ø—Ä–æ—à–ª–∞ –∞–Ω–∏–º–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞
        with open('text_gen.txt', encoding='utf8') as text:
            text_model = markovify.Text(text)
            step = 0
            while step != 1:
                a = text_model.make_sentence()
                if a is None or len(a) == 45:
                    continue

                else:
                    step += 1
                    print(a)
        bot.send_message(message.chat.id, f"{a}", )
        bot.send_sticker(message.chat.id, sticker="CAACAgQAAxkBAAECHS1lX2r0_FkEZzb6ZlrF2B45QpiSxgAC-Q0AAse0kVMlfVlz7AesOjME")
    if "—Ç—É–ø–æ–π" in message.text.lower():  # –ï—Å–ª–∏ —É–ø–æ–º–∏–Ω—É–ª–∏ –±–æ—Ç–∞
        bot.send_chat_action(chat_id=message.chat.id, action="typing", timeout=3)  # –ò–º–∏—Ç–∞—Ü–∏—è –Ω–∞–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞
        time.sleep(random.randint(1, 3))  # –¢–∞–π–º–∞—É—Ç —á—Ç–æ –±—ã –ø—Ä–æ—à–ª–∞ –∞–Ω–∏–º–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞
        bot.send_photo(message.chat.id, "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT0V3dWFk4iQRtFto6BDQRJHEpNd33DwTuAt6pdjH2zatE_5wGtDY2WnLFFePAuH7qwaLw&usqp=CAU", caption="–Ω—É —è –∂–µ –Ω–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ!")
    if "–≥–æ–ª–∞—è" in message.text.lower():  # –ï—Å–ª–∏ —É–ø–æ–º–∏–Ω—É–ª–∏ –±–æ—Ç–∞
        bot.send_chat_action(chat_id=message.chat.id, action="typing", timeout=3)  # –ò–º–∏—Ç–∞—Ü–∏—è –Ω–∞–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞
        time.sleep(random.randint(1, 3))  # –¢–∞–π–º–∞—É—Ç —á—Ç–æ –±—ã –ø—Ä–æ—à–ª–∞ –∞–Ω–∏–º–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞
        bot.send_photo(message.chat.id, "https://i.pinimg.com/550x/e3/92/81/e39281d9aacc9757b3526baa55625a63.jpg")
    if "–ø–∏–¥—Ä" in message.text.lower():  # –ï—Å–ª–∏ —É–ø–æ–º–∏–Ω—É–ª–∏ –±–æ—Ç–∞
        cursor.execute(f"SELECT max(data_fag) from data_fag where id_chat = {chat_id}")
        bot.send_chat_action(chat_id=message.chat.id, action="typing", timeout=3)  # –ò–º–∏—Ç–∞—Ü–∏—è –Ω–∞–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞
        time.sleep(random.randint(1, 3))  # –¢–∞–π–º–∞—É—Ç —á—Ç–æ –±—ã –ø—Ä–æ—à–ª–∞ –∞–Ω–∏–º–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞
        # bot.send_message(message.chat.id, f"–í—Å–µ –∏ —Ç–∞–∫ –∑–Ω–∞—é –∫—Ç–æ –ø–∏–¥—Ä –¥–Ω—è, –¥–∞ {}?")




bot.polling(none_stop=True)

text = 'sdgasgd'
